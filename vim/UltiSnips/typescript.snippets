snippet if "if (condition) { ... }"
if ($1) {
	${0:${VISUAL}}
}
endsnippet

snippet cl "console.log"
console.log(${0});
endsnippet

snippet co "console.log json"
console.log(JSON.stringify($0, null, 4));
endsnippet

snippet todo "// TODO " b
// TODO: $0
endsnippet

snippet ret
return $0;
endsnippet

snippet exp "expect equal" b
expect($1).to.equal($2);
endsnippet

snippet des "describe"
describe('$1', function() {
	$2
});
endsnippet

snippet it "it"
it('$1', async () => {
	$2
});
endsnippet

snippet bE "beforeEach"
beforeEach(async () => {
	$1
});
endsnippet

snippet i_ "import lodash"
import * as _ from 'lodash';
endsnippet

snippet cf "const function"
const ${1} = (${2}) => {
	${VISUAL}$0
};
endsnippet

snippet cv "const value"
const ${1} = ${2};
endsnippet

snippet pub "public"
public ${1}(${2}): any {
	$3
}
endsnippet

snippet puba "public async"
public async ${1}(${2}): Promise<any> {
	$3
}
endsnippet

snippet pri "private"
private ${1}(${2}): any {
	$3
}
endsnippet

snippet pria "private async"
private async ${1}(${2}): Promise<any> {
	$3
}
endsnippet

snippet try "try / catch"
try {
	$1
} catch (e) {
	$2
}
endsnippet

snippet fof "for of"
for (const ${1} of ${2}) {
	$3
}
endsnippet
