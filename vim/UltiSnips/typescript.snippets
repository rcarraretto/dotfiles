snippet if "if (condition) { ... }"
if ($1) {
	${0:${VISUAL}}
}
endsnippet

snippet cl "console.log"
console.log(${0});
endsnippet

snippet co "console.log json"
console.log(JSON.stringify($0, null, 4));
endsnippet

snippet ce "console.error"
console.error(${0});
endsnippet

snippet todo "// TODO " b
// TODO: $0
endsnippet

snippet ret
return $0;
endsnippet

snippet exp "expect equal" b
expect($1).to.equal($2);
endsnippet

snippet des "describe"
describe('$1', () => {
	$2
});
endsnippet

snippet it "it"
it('$1', async () => {
	$2
});
endsnippet

snippet test "test"
test("$1", async () => {
	$2
});
endsnippet

snippet bE "beforeEach"
beforeEach(async () => {
	$1
});
endsnippet

snippet aE "afterEach"
afterEach(async () => {
	$1
});
endsnippet

snippet inter "interface"
interface $1 {
	${2}
}
endsnippet

snippet imp "import from"
import { ${1} } from '${2}';
endsnippet

snippet i* "import plain js lib"
import * as ${1} from '$1';
endsnippet

snippet i_ "import lodash"
import * as _ from 'lodash';
endsnippet

snippet cons "constructor"
constructor(${1}) {${2}}
endsnippet

snippet chain "lodash chain"
_.chain(${1})
	${2}
	.value();
endsnippet

snippet af "arrow function" i
(${1}) => {
	${2}
}
endsnippet

snippet sf "short arrow function" i
(${1}) => ${2}
endsnippet

snippet f "function"
function ${1}(${2}) {
	$0
}
endsnippet

snippet cf "const function"
const ${1} = (${2}) => {
	${VISUAL}$0
};
endsnippet

snippet cv "const value"
const ${1} = ${2};
endsnippet

snippet pub "public"
public ${1}(${2}): void {
	$3
}
endsnippet

snippet puba "public async"
public async ${1}(${2}): Promise<void> {
	$3
}
endsnippet

snippet pri "private"
private ${1}(${2}): void {
	$3
}
endsnippet

snippet pria "private async"
private async ${1}(${2}): Promise<void> {
	$3
}
endsnippet

snippet pri= "private ="
private ${1} = () => {
	$2
};
endsnippet

snippet try "try / catch"
try {
	$1
} catch (e) {
	$2
}
endsnippet

snippet th "throw new Error"
throw new Error($0);
endsnippet

snippet fof "for of"
for (const ${1} of ${2}) {
	$3
}
endsnippet

snippet foi "for i"
for (let i = 0; i < ${1}.length; i++) {
	$2
}
endsnippet

snippet while "while"
while (${1}) {
	${2}
}
endsnippet

snippet /** "/** **/"
/**
 * $0
 */
endsnippet

snippet tapo "log lodash chain"
.tap(i => console.log(JSON.stringify(i, null, 4)))
endsnippet
