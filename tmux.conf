set -g default-terminal "screen-256color"
set -s escape-time 0

# copy and paste on macOS Sierra
#
# Note: Different from the reattach-to-user-namespace docs, I'm not running the program
# with the -l option.
# https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard#the-wrapper-program
# Therefore, each tmux pane will not be a login-shell.
#
# As a consequence, a new terminal will run /etc/profile (and ~/.bash_profile),
# but each pane will only run ~/.bashrc
#
# This is a way to fix $PATH being messed up in tmux in macOS.
# See https://superuser.com/a/583502/609096
#
# Reason:
# /etc/profile runs /usr/libexec/path_helper, which reorders paths in $PATH
# to put some bin paths in the front (/usr/local/bin, /usr/bin, /bin, /usr/sbin, /sbin).
#
# As a consequence:
# 1) $PATH is correct when opening a new terminal:
# $PATH starts as empty, then /etc/profile runs and puts the bin paths in $PATH
# and then my ~/.bashrc runs and adds more paths to $PATH.
#
# 2) $PATH is incorrect when opening a tmux pane:
# $PATH is already filled by step (1), then /etc/profile is sourced again,
# bin paths are pushed to the front of $PATH and my ~/.bashrc doesn't attempt to add paths
# that are already in $PATH. Therefore, $PATH is different from (1).
#
# As a result, for example, I'm unable to override system ruby, because bin paths are in front.
#
set -g default-shell $SHELL
set -g default-command "reattach-to-user-namespace ${SHELL}"

# prefix
unbind C-b
set -g prefix 'C-\'
bind 'C-\' send-prefix

# reload config file
unbind r
bind r source-file ~/.tmux.conf \; display-message "Reloaded tmux.conf"

# last window
bind 'C-\' last-window

# Open panes with the path of the current pane
unbind c
bind c new-window -c '#{pane_current_path}'
unbind %
bind % split-window -h -c '#{pane_current_path}'
unbind '"'
bind '"' split-window -v -c '#{pane_current_path}'

# <space> activates the copy-mode
unbind Space # default: next-layout
bind Space copy-mode

# '/' starts search
unbind / # default: Describe key binding
bind-key / copy-mode\; send-key ?

# Vim-like key bindings for pane navigation
unbind h
bind h select-pane -L
unbind j
bind j select-pane -D
unbind k
bind k select-pane -U
unbind l # normally used for last-window
bind l select-pane -R

# move windows left and right
bind S-Left swap-window -t -1\; previous-window
bind S-Right swap-window -t +1\; next-window

# Automatically renumber window numbers on closing a pane
set -g renumber-windows on

# toggle timer
unbind t
bind t run-shell 'timer -t > /dev/null'\; refresh-client -S\;

# add to timer
unbind A
bind A command-prompt -p "Add to timer" "run-shell 'timer -a %1 > /dev/null'\; refresh-client -S\;";

# Use vim keybindings in copy mode
setw -g mode-keys vi

# mouse
# can be used to select panes, select windows (by clicking on the status bar)
# and resize panes
set -g mouse on

# mouse scroll up/down
bind -T copy-mode-vi WheelUpPane select-pane\; send-keys -t '{mouse}' -X clear-selection\; send-keys -t  '{mouse}' -X -N 3 scroll-up
bind -T copy-mode-vi WheelDownPane select-pane\; send-keys -t '{mouse}' -X clear-selection\; send-keys -t '{mouse}' -X -N 3 scroll-down

# Stay in copy mode on drag end
unbind -T copy-mode-vi MouseDragEnd1Pane

# Setup 'v' to begin selection as in Vim
bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi 'y' send -X copy-selection

# Copy selection and paste content on command-line
bind -T copy-mode-vi 'x' send -X copy-selection-and-cancel\; run "tmux set-buffer \"$(pbpaste)\"; tmux paste-buffer"

# Don't wrap searches
set -w -g wrap-search off

# Make vim FocusGained event work,
# so Terminus plugin can auto refresh files
set -g focus-events on

# Reload status bar when focused changed,
# since git branch is displayed on it.
# (An external program like SourceTree could have changed the git branch)
set-hook -g pane-focus-in "run-shell 'tmux refresh-client -S'"
set-hook -g pane-focus-out "run-shell 'tmux refresh-client -S'"

# Start window and pane numbering at 1
set -g base-index 1
set -g pane-base-index 1

# Turn off inter-pane border highlight
set -ga pane-active-border-style bg=default,fg=default

# Status bar
set -g status-style 'bg=colour19,fg=white'
set -g status-left-length 40 # default is 10
set -g status-right-length 80
set -g status-left '#[fg=yellow][#S] '
set -g status-right '#(tmux-status-right)| #[fg=colour20]%H:%M '
set -g status-interval 60 # default is 15.

# Highlight active window
set -g window-status-current-style bg=colour08,fg=white
